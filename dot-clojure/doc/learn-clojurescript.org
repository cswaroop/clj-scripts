#+TITLE: [[https://www.learn-clojurescript.com/][Learn-clojurescript.com]]

* Project setup
#+BEGIN_SRC shell
lein new figwheel cljs-weather -- --reagent
cd cljs-weather
npm install
clj-kondo --lint "$(lein classpath)"
lein figwheel
#+END_SRC

http://localhost:3449/index.html


* Reagent app

#+BEGIN_SRC clojure :tangle cljs-weather\src\cljs_weather\core.cljs 
(ns cljs-weather.core
    (:require 
              [reagent.core :as reagent :refer [atom]]
              [reagent.dom :as rd]))

(enable-console-print!)

(println "This text is printed from src/cljs-weather/core.cljs. Go ahead and edit it and see reloading in action.")

;; define your app data so that it doesn't get over-written on reload

(defonce app-state (atom {:text "Hello world!"}))


(defn hello-world []
  [:div
   [:h1 (:text @app-state)]
   [:h3 "Edit this and watch it change!"]])

(rd/render [hello-world]
           (. js/document (getElementById "app")))

(defn on-js-reload []
  ;; optionally touch your app-state to force rerendering depending on
  ;; your application
  ;; (swap! app-state update-in [:__figwheel_counter] inc)
)


#+END_SRC

#+BEGIN_SRC html :tangle cljs-weather\resources\public\index.html
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="css/style.css" rel="stylesheet" type="text/css">
    <link rel="icon" href="https://clojurescript.org/images/cljs-logo-icon-32.png">
  </head>
  <body>
    <div id="app">
      <h2>Sample Figwheel App</h2>
      <p>Checkout your developer console.</p>
    </div>
    <script src="js/compiled/cljs_weather.js" type="text/javascript"></script>
  </body>
</html>

#+END_SRC

#+BEGIN_SRC css :tangle cljs-weather\resources\public\css\style.css
/* some style added */

#+END_SRC
